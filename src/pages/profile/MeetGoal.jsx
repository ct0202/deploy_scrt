import React, { useState, useEffect } from "react";
import {useNavigate} from "react-router-dom";


function MeetGoal() {
    const navigate = useNavigate();
    const [selectedOption, setSelectedOption] = useState(null);

    useEffect(() => {
        const storedData = JSON.parse(localStorage.getItem("step4Data")) || {};
        setSelectedOption(storedData.purpose || null);
    }, []);

    const handleSelect = (optionId) => {
        localStorage.setItem("step4Data", JSON.stringify({ purpose: optionId }));
        setSelectedOption(optionId);
    };

    const options = [
        {
            id: 1,
            title: "–§–ª–∏—Ä—Ç –∏ —Å–≤–∏–¥–∞–Ω–∏—è",
            description: "–•–æ–¥–∏—Ç—å –Ω–∞ —Å–≤–∏–¥–∞–Ω–∏—è –∏ —Ö–æ—Ä–æ—à–æ –ø—Ä–æ–≤–æ–¥–∏—Ç—å –≤—Ä–µ–º—è",
            emoji: "üî•",
        },
        {
            id: 2,
            title: "–°–µ—Ä—å—ë–∑–Ω—ã–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è",
            description: "–ù–∞–π—Ç–∏ –≤—Ç–æ—Ä—É—é –ø–æ–ª–æ–≤–∏–Ω–∫—É –∏ —Å–æ–∑–¥–∞—Ç—å —Å—á–∞—Å—Ç–ª–∏–≤—ã–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è",
            emoji: "üíç",
        },
        {
            id: 3,
            title: "–î—Ä—É–∂–µ—Å–∫–æ–µ –æ–±—â–µ–Ω–∏–µ",
            description: "–ù–∞–π—Ç–∏ –¥—Ä—É–∑–µ–π –∏ –∑–Ω–∞–∫–æ–º—ã—Ö, –æ–±—â–∞—Ç—å—Å—è –∏ –¥–æ–≥–æ–≤–∞—Ä–∏–≤–∞—Ç—å—Å—è –æ –≤—Å—Ç—Ä–µ—á–∞—Ö",
            emoji: "‚úåÔ∏è",
        },
        {
            id: 4,
            title: "–û–±–æ –≤—Å—ë–º –∏ –Ω–∏ –æ —á—ë–º",
            description: "–û–±—â–∞—Ç—å—Å—è, –¥–µ–ª–∏—Ç—å—Å—è –º—ã—Å–ª—è–º–∏ –∏ –∏–¥–µ—è–º–∏ –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π",
            emoji: "ü•Ç",
        },
    ];

    return (
        <div className="w-[100vw] flex flex-col justify-center items-center">
        <div className="flex flex-col items-center w-[343px] h-[100%] overflow-x-hidden ">
            <div className='mt-[90px] mb-[30px] w-full pr-[16px] pl-[16px] flex-row text-[18px] flex justify-between'>
                <span className='text-white' onClick={() => {navigate(-1)}}>–û—Ç–º–µ–Ω–∞</span>
                <span className='text-[#A1F69E]' onClick={() => {navigate(-1)}}>–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</span>
            </div>
            <h1 className="font-raleway font-semibold mt-6 text-white text-[20px]">
                –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ, –¥–ª—è —á–µ–≥–æ –≤—ã –∑–¥–µ—Å—å
            </h1>
            <h1 className="font-raleway font-light mt-2 text-white text-center text-[16px]">
                –ú–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç
            </h1>
            <div className="grid grid-cols-1 justify-start flex-wrap items-center gap-[16px] mt-[16px]">
                {options.map((option) => (
                    <div
                        key={option.id}
                        onClick={() => handleSelect(option.id)}
                        className={`w-[343px] h-[89px] rounded-[8px] flex text-white cursor-pointer transition-all 
            ${
                            selectedOption === option.id
                                ? "bg-[#043939] border-[1.5px] border-[#a1f69e]"
                                : "bg-[#022424] border-[1px] border-[#233636]"
                        }`}
                    >
            <span className="flex items-center justify-center text-[32px] w-[60px] h-[89px] text-center">
              {option.emoji}
            </span>
                        <div className="flex items-center justify-center flex-col gap-[4px]">
              <span className="w-[270px] text-[18px] font-semibold">
                {option.title}
              </span>
                            <span className="w-[268px] text-[14px] font-light">
                {option.description}
              </span>
                        </div>
                    </div>
                ))}
            </div>
        </div>
        </div>
    );
}

export default MeetGoal;
